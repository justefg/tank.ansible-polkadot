---

# - name: "Make directory structure"
#   file:
#     path: "{{ item }}"
#     state: directory
#     owner: 1000
#   with_items:
#     - "{{ bc_path_config }}"
#     - "{{ bc_path_state }}"


# - name: Start boot-node container
#   register: _start_boot_node
#   docker_container:
#     name: "{{ bc_name }}-{{ bc_component_name }}"
#     image: "{{ bc_polkadot_image }}"
#     command: |
#       /usr/local/bin/polkadot -d /state
#       --chain=bench --validator --alice --ws-external --rpc-external --rpc-cors=all
#       --node-key-type ed25519 --node-key 1111111111111111111111111111111111111111111111111111111111111111
#     hostname: "{{ bc_name }}-{{ bc_component_name }}"
#     network_mode: host
#     volumes:
#       - "{{ bc_path_state }}:/state"
#     env:
#       EXTRA_VALIDATORS: "{{ (groups['bcpeers'] | length) - (groups['bcboot'] | length) }}"
#       EXTRA_ENDOWED: "{{ bc_polkadot_extra_endowed }}"
#     stop_timeout: 600
#     pull: true


# - name: Start boot-node metric exporter container
#   docker_container:
#     name: "{{ bc_name }}-{{ bc_component_name }}-metrics"
#     image: "{{ bc_polkadot_exporter_image }}"
#     command: --exporter_port "{{ bc_polkadot_node_metrics_port }}"
#     hostname: "{{ bc_name }}-{{ bc_component_name }}-metrics"
#     network_mode: host
#     stop_timeout: 600
#     pull: true

# - name: "Check health boot"
#   uri:
#     url: "http://localhost:9933"
#     method: POST
#     body: '{"jsonrpc":"2.0", "method":"system_health", "params": [], "id":1}'
#     body_format: json
#     status_code: 200
#   register: check_boot
#   retries: 15
#   delay: 10
#   until: check_boot is success

# - name: "Waiting"
#   pause:
#     seconds: 15
#   when:
#     - _start_boot_node is changed
